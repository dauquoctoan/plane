# # This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

# name: Node.js CI

# on:
#   push:
#     branches: [ "product" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: ./web

#     strategy:
#       matrix:
#         node-version: [20.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#     - uses: actions/checkout@v3
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v3
#       with:
#         path: web
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - run: npm ci
#     - run: npm run build --if-present
#     - name: executing remote ssh commands using password
#       uses: actions/setup-node@v3
#       with:
#         host: ${{ secrets.HOST }}
#         username: ${{ secrets.USERNAME }}
#         password: ${{ secrets.PASSWORD }}
#         script: |
#           cd ..
#           cd ..
#           cd source-code-pro
#           cd plane
#           git pull origin product
#           cd web
#           npm i
#           npm run build
#           cd ..
#           cd server
#           npm i
#           npm run build
#           cd ..
#           pm2 reload all

##ci/cd with docker-compose file

name: Docker Build, Push, and Deploy

on:
  push:
    branches:
      - product

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

    - name: Build and push images
      run: |
        docker-compose -f docker-compose.yml build && docker-compose -f docker-compose.yml push

    - name: Check if images are pushed
      run: docker manifest inspect dqtoan0123/plane-web:latest && docker manifest inspect dqtoan0123/plane-server:latest

    - name: executing remote ssh commands using password
      uses: panubo/action-ssh@v3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        script: |
          cd product
          whoami
          cd plane
          docker-compose pull
          docker-compose up -d